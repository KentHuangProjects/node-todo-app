swagger: "2.0"
info:
  description: "Todo Api(包含JWT Token用户验证), 用户可以注册，登录，Todo的CRUD需要注册用户的认证凭证（token）进行交互。"
  version: "1.0.0"
  title: "Todo"
  contact:
    name: "github-repo"
    url: "https://github.com/kent426/node-todo-app"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "stormy-thicket-32229.herokuapp.com"
basePath: "/"
tags:
  - name: Todos
    description: 关于Todo的API
  - name: Users
    description: 用户注册与登录API
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    post:
      tags:
        - Users
      summary: 注册用户
      description: 注册用户
      parameters:
        - in: body
          name: body
          description: 定义要注册的email和password
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: 成功创建新用户
          schema:
            properties:
              _id:
                type: string
              email:
                type: string
          headers:
            x-auth:
              type: string
              description: 用户身份认证的token
        '400':
          description: Bad Request(text为空或空格)， 或用户已经注册
  /users/me:
    get:
      tags:
        - Users
      summary:  获取用户登录信息
      description: 获取用户登录信息
      parameters:
        - name: x-auth
          in: header
          description: authorization header 用于验证注册用户
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 获取用户信息成功
          schema:
            properties:
              _id:
                type: string
              email:
                type: string
          headers:
            x-auth:
              type: string
              description: 用户身份认证的token
        '401':
          description: Unauthorized(没有登录)
  /users/me/token:
    delete:
      tags:
        - Users
      description: 退出登录
      summary: 退出登录
      parameters:
        - name: x-auth
          in: header
          description: authorization header 用于验证注册用户的凭证
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 退出登录成功，在数据库删除当前token
        '401':
          description: Unauthorized(没有登录)
        '400':
          description: Bad Request
  /users/login:
    post:
      tags:
        - Users
      summary:  用户登录
      description: 用户登录
      parameters:
        - in: body
          name: body
          description: 输入注册的email和密码
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: 用户登录成功
          schema:
            properties:
              _id:
                type: string
              email:
                type: string
          headers:
            x-auth:
              type: string
              description: 用户身份认证的token
        '400':
          description: 登录失败， 用户或密码错误
  /todos:
    post:
      tags:
        - Todos
      summary: 认证用户创建todo
      description: 创建新的todo
      parameters:
        - in: body
          name: body
          description: 定义要创建的todo的文本
          schema:
            required:
              - text
            properties:
              text:
                type: string
            example: 
              text: '吃饭'
        - name: x-auth
          in: header
          description: authorization header 用于验证注册用户
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: New user is created
          schema:
            required:
              - text
            properties:
              text:
                type: string
        '401':
          description: Unauthorized(没有登录)
        '400':
          description: Bad Request(text为空或空格)
    get:
      tags:
        - Todos
      summary: 获取指定用户的所有todo
      parameters:
        - name: x-auth
          in: header
          description: authorization header 用于验证注册用户
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized(没有登录)
        '400':
          description: Bad Request
          schema:
            properties:
              todos:
                $ref: '#/definitions/Todos'
          
  '/todos/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: todo记录中的_id
        type: string
      - name: x-auth
        in: header
        description: authorization header 用于验证注册用户
        required: true
        type: string
    get:
      tags:
        - Todos
      summary: 获悉登录用户的指定todo，根据todo中的_id
      responses:
        '200':
          description: todo is found(获取成功)
          schema:
            properties:
              todo:
                $ref: '#/definitions/Todo'
        '401':
          description: Unauthorized(没有登录)
        '404':
          description: not found(id不存在)
        '400':
          description: Bad Request
    delete:
      summary: 删除指定用户的todo
      tags:
        - Todos
      responses:
        '200':
          description: todo is deleted(删除成功)
          schema:
            properties:
              todo:
                $ref: '#/definitions/Todo'
        '401':
          description: Unauthorized(没有登录)
        '404':
          description: not found(id不存在)
        '400':
          description: Bad Request
    patch:
      parameters:
        - in: body
          name: body
          description: todo状态值
          schema:
            properties:
              completed:
                type: boolean
            example: 
              completed: true
      summary: 更新todo状态，标记完成状态(completed设为true或false)
      tags:
        - Todos
      responses:
        '200':
          description: 更新成功
          schema:
            properties:
              todo:
                $ref: '#/definitions/Todo'
        '401':
          description: Unauthorized(没有登录)
        '404':
          description: not found(id不存在)
        '400':
          description: Bad Request
definitions:
  User:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
    example: 
      email: "kent123@abc.cn"
      password: "12333333a"
  Todo:
    required:
      - text
      - _id
      - _creator
    properties:
      _v:
        type: string
      _id:
        type: string
        uniqueItems: true
      _creator:
        type: string
        uniqueItems: true
      text:
        type: string
      completedAt:
        type: number
      completed:
        type: boolean
  Todos:
    type: array
    items:
      $ref: "#/definitions/Todo"
